// 1.Given an array of integers, find the pair of adjacent elements that has the largest product and return that product.


let arr = [10,2,8,6,3,6,6,4,7,1,2,5,8,12,1,-65,7,1];


function largestProduct(arr){
	let res  = -Infinity;
	for (let i = 0; i < arr.length -1; i++){
			if ((arr[i] * arr[i + 1]) > res) {
			res = arr[i] * arr[i + 1];
			}
	}
	return res;
}




// 2.Given an array of integers. All numbers are unique. Find the count of missing numbers between minimum and maximum elements to make integers sequence.


let arr =[-1,10,2];


function missingNumberCount(arr){
	let tempArr = [];
	let res;
	arr.sort((a,b)=>a-b);
	let n = arr[0]
	while(arr[arr.length-1] !== tempArr[tempArr.length - 1]){
		
		tempArr.push(n);
		n++;
	}
	res = tempArr.length - arr.length
	
	return res;
}



//3.Convert a long phrase to its acronym.


let str  = "Have a  good Night";

function acronym (str){
	let arr = str.split(" ");
	let tempStr = "";
	for (let el of arr){
		if (el != ""){ 
			let letter = el[0].toUpperCase();
			tempStr += letter;
		}
	}
	return tempStr;
}






//4.Given a string of digits, output all the contiguous substrings of length n in that string


let numStr = "495215";


function  contSubstr (numStr, n){
    let res = [];
    for(let  i = 0; i < numStr.length - n + 1 ; i++){
        let temp = "";
        temp = numStr.substr(i,n);
        res.push(temp)
    }
    return res.join(",");  
}





//5.Create a function that builds a tree like object given an array with object which contains parent and id properties.
