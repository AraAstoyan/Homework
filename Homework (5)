// 1. Given an array. Write a recursive function that removes the first element and returns the given array. 

let arr = [1,2,23,"3",6,5,4,7,9,9];
let len = arr.length;

function removeFirst(arr,remArr = []){
    
    if(remArr.length === len - 1 || len <= 1 ){
        return remArr;
    }else{
        remArr.push(arr[1])
        
        return removeFirst(arr.slice(1),remArr);
    }
    
    
}


// 2.Given an array of nested arrays. Write a recursive function that flattens it. (Hint create function that concats arrays).


//let arr =[[1,5],3,[3,4,[1,2]],10,[11,12,13]];

let arr =[1,[3,4,[1,2]],10];

function arrFlat (arr, newArr =[]){
	let tempArr = [];
	//let newArr = [];
	if (arr.length != 0){
		if (Array.isArray(arr[0])){
			tempArr = newArr.concat(arr[0])
			arr =arr.slice(1);
			arr =tempArr.concat(arr)
			return arrFlat(arr,newArr=[])
			}else{
				newArr.push(arr[0]);
				
				return arrFlat(arr.slice(1),newArr)
			}
	}else{
		return newArr;
	}
}




// 3. Given a number. Write a function that calculates its sum of the digits and if that sum has more than 1 digit find the sum of
//digits of that number. Repeat that process if needed and return
//the result.



function calcSum(num,total = 0){
	
	let numToStr = num.toString();
	if (numToStr.length >= 2){
		for (let i = 0; i < numToStr.length; i++){
			total += +numToStr[i];
		}
		return calcSum(total )
	}else{
		return +numToStr[0];
	}	
}
















